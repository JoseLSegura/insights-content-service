{
  "openapi": "3.0.0",
  "info": {
    "title": "Insights Content Service",
    "description": "Insights Content Service",
    "version": "1.0.0"
  },
  "paths": {
    "/openapi.json": {
      "get": {
        "summary": "Returns the OpenAPI specification JSON.",
        "operationId": "getOpenApi",
        "responses": {
          "200": {
            "description": "A JSON containing the OpenAPI specification for this service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "openapi": {
                      "type": "string"
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "paths": {
                      "type": "object",
                      "description": "Available paths and their descriptions."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "summary": "Returns a list of groups.",
        "operationId": "getGroups",
        "responses": {
          "200": {
            "description": "A JSON array of groups.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content": {
      "get": {
        "summary": "Returns static content for all rules.",
        "operationId": "getContent",
        "responses": {
          "200": {
            "description": "A encoding/gob encoded value with all the static content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rule-content": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rules": {
      "get": {
        "summary": "Returns the rule IDs of all the rules.",
        "operationId": "getRuleIDs",
        "responses": {
          "200": {
            "description": "A JSON array of all the rule IDs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
